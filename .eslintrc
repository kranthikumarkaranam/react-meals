//   0=off, 1=warn, 2=error
{
	/* Generally good ESLint practice to indicate this file is the root-level one used by the project */
	"root": true,
	"noInlineConfig": false, // To enable all inline config comments
	"reportUnusedDisableDirectives": true, // To report unused eslint-disable comment
	"env": {
		"browser": true,
		"node": true,
		"es6": true
	},
	"overrides": [],
	"ignorePatterns": [],
	"parser": "",
	"parserOptions": {
		"ecmaVersion": "latest",
		"sourceType": "module",
		"ecmaFeatures": {
			"jsx": true
		}
	},
	"settings": {
		"react": {
			"version": "detect" // Specify the version of React here or use "detect" to automatically detect the React version
		},
		"import/resolver": {
			"node": {
				"extensions": [".js", ".jsx", ".ts", ".tsx"]
			}
		}
	},
	"extends": [
		"eslint:recommended",
		"plugin:react/recommended",
		// If you are using the new JSX transform from React 17, extend react/jsx-runtime in your eslint config
		"plugin:react/jsx-runtime",
		"plugin:react-hooks/recommended",
		"plugin:jsx-a11y/recommended",
		"plugin:import/recommended",
		"plugin:prettier/recommended",
		// Make sure to put it last, so it gets the chance to override other configs.
		"prettier"
	],
	"plugins": ["react", "react-hooks", "jsx-a11y"],
	"rules": {
		"eqeqeq": ["error", "always"],
		"no-console": ["warn", { "allow": ["warn", "error"] }],
		"no-undef": ["error", { "typeof": true }],
		"no-use-before-define": [
			"error",
			{
				"functions": true,
				"classes": true,
				"variables": true,
				"allowNamedExports": false
			}
		],
		"no-shadow": "error",
		"no-unused-vars": ["warn", { "vars": "all", "args": "after-used", "ignoreRestSiblings": false }],
		"arrow-body-style": ["error", "as-needed"],
		"prefer-arrow-callback": ["error", { "allowNamedFunctions": false, "allowUnboundThis": true }],
		"curly": ["error", "all"],
		"prettier/prettier": [
			"error",
			{
				"endOfLine": "auto"
			},
			{
				"usePrettierrc": true
			}
		],
		"react/jsx-filename-extension": ["warn", { "extensions": [".jsx", ".tsx"] }],
		"react/jsx-uses-react": "off",
		"react/react-in-jsx-scope": "off",
		"react/jsx-uses-vars": "warn",
		"react/button-has-type": [
			"error",
			{
				"button": true,
				"submit": true,
				"reset": true
			}
		],
		"react/no-array-index-key": "error",
		"react/prop-types": "off",
		"react/destructuring-assignment": [
			"error",
			"always",
			{ "ignoreClassFields": false, "destructureInSignature": "always" }
		],
		"react-hooks/rules-of-hooks": "error",
		"react-hooks/exhaustive-deps": "warn",
		"import/extensions": [
			"error",
			"never",
			{
				"ignorePackages": false,
				"pattern": {
					"json": "always",
					"svg": "always",
					"png": "always",
					"jpg": "always",
					"jpeg": "always",
					"gif": "always",
					"css": "always"
				}
			}
		],
		"import/prefer-default-export": ["warn", { "target": "single" }],
		"import/order": [
			"error",
			{
				"warnOnUnassignedImports": true,
				"newlines-between": "always", // at least one new line between each group will be enforced
				"distinctGroup": false, // a newline will not separate imports that match that pattern with the rest of the group (assuming newlines-between is always).
				"pathGroupsExcludedImportTypes": ["builtin", "external", "object"], // The default value is ["builtin", "external", "object"].
				"alphabetize": {
					"order": "asc",
					"caseInsensitive": true
				},
				"groups": ["builtin", "external", "internal", "parent", "sibling", "index", "object", "type"]
				// https://github.com/import-js/eslint-plugin-import/blob/main/docs/rules/order.md#pathgroups-array-of-objects
				// "pathGroups": [
				// 	{
				// 		"pattern": "src/**",
				// 		"group": "parent",
				// 		"position": "before"
				// 	},
				// 	{
				// 		"pattern": "@components/**",
				// 		"group": "sibling",
				// 		"position": "after"
				// 	},
				// 	{
				// 		"pattern": "routes/**",
				// 		"group": "sibling"
				// 	},
				// 	{
				// 		"pattern": "assets/**",
				// 		"group": "sibling",
				// 		"position": "after"
				// 	}
				// ]
			}
		],
		"import/no-unresolved": ["error", { "caseSensitive": true, "commonjs": true, "amd": true }],
		"import/default": "error",
		"import/named": "error",
		"import/export": "error",
		"import/namespace": "error"
	}
}
